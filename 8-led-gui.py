#!/usr/bin/python
# -*- coding: UTF-8 -*-

# This program will turn the LEDs on or off with a checkbox in a GUI

# GUI generated by wxGlade 0.6.8 on Thu Apr 30 11:18:19 2015

# Import all the things
import time

# try:
#     import RPi.GPIO as GPIO
# except ImportError:
#     print("Error importing RPi.GPIO!  This is probably because you need superuser privileges.")

try:
    import wx
    import gettext
except ImportError:
    print("The wxPython module is required to run this program.")

class MyFrame(wx.Frame):
    def __init__(self, *args, **kwds):
        # begin wxGlade: MyFrame.__init__
        kwds["style"] = wx.DEFAULT_FRAME_STYLE
        wx.Frame.__init__(self, *args, **kwds)

        # Menu Bar
        self.frame_1_menubar = wx.MenuBar()
        wxglade_tmp_menu = wx.Menu()
        wxglade_tmp_menu.Append(wx.ID_ANY, _("Exit"), "", wx.ITEM_NORMAL)
        self.frame_1_menubar.Append(wxglade_tmp_menu, _("File"))
        self.SetMenuBar(self.frame_1_menubar)
        # Menu Bar end
        self.frame_1_statusbar = self.CreateStatusBar(2, 0)
        self.label_1 = wx.StaticText(self, wx.ID_ANY, _("   LED 1   "))
        self.checkbox_1 = wx.CheckBox(self, wx.ID_ANY, _("LED 1"))
        self.label_2 = wx.StaticText(self, wx.ID_ANY, _("   LED 2   "))
        self.checkbox_2 = wx.CheckBox(self, wx.ID_ANY, _("LED 2"))
        self.label_3 = wx.StaticText(self, wx.ID_ANY, _("   LED 3   "))
        self.checkbox_3 = wx.CheckBox(self, wx.ID_ANY, _("LED 3"))
        self.label_4 = wx.StaticText(self, wx.ID_ANY, _("   LED 4   "))
        self.checkbox_4 = wx.CheckBox(self, wx.ID_ANY, _("LED 4"))
        self.label_5 = wx.StaticText(self, wx.ID_ANY, _("   LED 5   "))
        self.checkbox_5 = wx.CheckBox(self, wx.ID_ANY, _("LED 5"))
        self.label_6 = wx.StaticText(self, wx.ID_ANY, _("   LED 6   "))
        self.checkbox_6 = wx.CheckBox(self, wx.ID_ANY, _("LED 6"))
        self.label_7 = wx.StaticText(self, wx.ID_ANY, _("   LED 7   "))
        self.checkbox_7 = wx.CheckBox(self, wx.ID_ANY, _("LED 7"))
        self.label_8 = wx.StaticText(self, wx.ID_ANY, _("   LED 8   "))
        self.checkbox_8 = wx.CheckBox(self, wx.ID_ANY, _("LED 8"))

        self.__set_properties()
        self.__do_layout()
        # end wxGlade

    def __set_properties(self):
        # begin wxGlade: MyFrame.__set_properties
        self.SetTitle(_("LED On/Off"))
        self.SetSize((1000, 500))
        self.frame_1_statusbar.SetStatusWidths([-1, -1])
        # statusbar fields
        frame_1_statusbar_fields = [_("top:bottom::left:right"), _("Click the checkbox to light the LED")]
        for i in range(len(frame_1_statusbar_fields)):
            self.frame_1_statusbar.SetStatusText(frame_1_statusbar_fields[i], i)
        # end wxGlade

    def __do_layout(self):
        # begin wxGlade: MyFrame.__do_layout
        grid_sizer_1 = wx.FlexGridSizer(9, 2, 10, 10)
        grid_sizer_1.Add(self.label_1, 0, wx.ALIGN_CENTER_HORIZONTAL | wx.ALIGN_CENTER_VERTICAL | wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.checkbox_1, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_2, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.checkbox_2, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_3, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.checkbox_3, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_4, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.checkbox_4, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_5, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.checkbox_5, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_6, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.checkbox_6, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_7, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.checkbox_7, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.label_8, 0, wx.ADJUST_MINSIZE, 0)
        grid_sizer_1.Add(self.checkbox_8, 0, wx.ADJUST_MINSIZE, 0)
        self.SetSizer(grid_sizer_1)
        grid_sizer_1.SetSizeHints(self)
        grid_sizer_1.AddGrowableCol(1)
        self.Layout()
        # end wxGlade

# end of class MyFrame
if __name__ == "__main__":
    gettext.install("app") # replace with the appropriate catalog name

    app = wx.PySimpleApp(0)
    wx.InitAllImageHandlers()
    frame_1 = MyFrame(None, wx.ID_ANY, "")
    app.SetTopWindow(frame_1)
    frame_1.Show()
    app.MainLoop()

# Set up RPi.GPIO
GPIO.setmode(GPIO.BCM)
GPIO.setwarnings(False)   # Silence cleanup warnings if CTRL-C is pressed

# Set up controls
GPIO.setup([17,18,27,22,23,24,25,4],GPIO.OUT)

# Turn all LEDs off
GPIO.output([17,18,27,22,23,24,25,4],GPIO.HIGH)

# Set run conditions (maybe use this for control later)
count = 0
interval = 0.5
countmax = 1

## Blink left to right
#while count < countmax:
#    GPIO.output(17,GPIO.LOW)
#    time.sleep(interval)
#    GPIO.output(17,GPIO.HIGH)
#    GPIO.output(18,GPIO.LOW)
#    time.sleep(interval)
#    GPIO.output(18,GPIO.HIGH)
#    GPIO.output(27,GPIO.LOW)
#    time.sleep(interval)
#    GPIO.output(27,GPIO.HIGH)
#    GPIO.output(22,GPIO.LOW)
#    time.sleep(interval)
#    GPIO.output(22,GPIO.HIGH)
#    GPIO.output(23,GPIO.LOW)
#    time.sleep(interval)
#    GPIO.output(23,GPIO.HIGH)
#    GPIO.output(24,GPIO.LOW)
#    time.sleep(interval)
#    GPIO.output(24,GPIO.HIGH)
#    GPIO.output(25,GPIO.LOW)
#    time.sleep(interval)
#    GPIO.output(25,GPIO.HIGH)
#    GPIO.output(4,GPIO.LOW)
#    time.sleep(interval)
#    GPIO.output(4,GPIO.HIGH)

# Finish
GPIO.cleanup([17,18,27,22,23,24,25,4])   # clean the channels
exit(0)
